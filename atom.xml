<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>whileTrue0x90&#39;s blog</title>
  
  <subtitle>乾坤未定, 你我皆是黑马</subtitle>
  <link href="http://www.5isan.com/atom.xml" rel="self"/>
  
  <link href="http://www.5isan.com/"/>
  <updated>2023-03-29T02:39:05.554Z</updated>
  <id>http://www.5isan.com/</id>
  
  <author>
    <name>whileTrue0x90</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>libyuv 源码阅读 01 格式介绍</title>
    <link href="http://www.5isan.com/2023/03/29/libyuv-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-01-%E6%A0%BC%E5%BC%8F%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.5isan.com/2023/03/29/libyuv-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-01-%E6%A0%BC%E5%BC%8F%E4%BB%8B%E7%BB%8D/</id>
    <published>2023-03-29T02:33:56.000Z</published>
    <updated>2023-03-29T02:39:05.554Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/whileTrue0x90/libyuv/blob/main/docs/formats.md">https://github.com/whileTrue0x90/libyuv/blob/main/docs/formats.md</a></p><h1 id="Introduction-介绍"><a href="#Introduction-介绍" class="headerlink" title="Introduction 介绍"></a>Introduction 介绍</h1><p>Formats (FOURCC) supported by libyuv are detailed here.</p><blockquote><p>这里详细介绍了libyuv支持的格式（FOURCC）。</p></blockquote><h1 id="Core-Formats-核心格式"><a href="#Core-Formats-核心格式" class="headerlink" title="Core Formats 核心格式"></a>Core Formats 核心格式</h1><p>There are 2 core formats supported by libyuv - I420 and ARGB. All YUV formats can be converted to&#x2F;from I420. All RGB formats can be converted to&#x2F;from ARGB.</p><blockquote><p>libyuv支持两种核心格式I420和ARGB。所有YUV格式都可以转换为I420或从I420转换。所有RGB格式都可以转换为ARGB或从ARGB转换。</p></blockquote><p>Filtering functions such as scaling and planar functions work on I420 and&#x2F;or ARGB.</p><blockquote><p>诸如缩放和平面函数之类的滤波函数在I420和&#x2F;或ARGB上工作。</p></blockquote><h1 id="OSX-Core-Media-Pixel-Formats-OSX核心媒体像素格式"><a href="#OSX-Core-Media-Pixel-Formats-OSX核心媒体像素格式" class="headerlink" title="OSX Core Media Pixel Formats OSX核心媒体像素格式"></a>OSX Core Media Pixel Formats OSX核心媒体像素格式</h1><p>This is how OSX formats map to libyuv</p><blockquote><p>这是OSX格式映射到libyuv的方式</p></blockquote><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kCMPixelFormat_32ARGB          = <span class="number">32</span>,      FOURCC_BGRA</span><br><span class="line">kCMPixelFormat_32BGRA          = <span class="string">&#x27;BGRA&#x27;</span>,  FOURCC_ARGB</span><br><span class="line">    kCMPixelFormat_24RGB           = <span class="number">24</span>,      FOURCC_RAW</span><br><span class="line">    kCMPixelFormat_16BE555         = <span class="number">16</span>,      Not supported.</span><br><span class="line">    kCMPixelFormat_16BE565         = <span class="string">&#x27;B565&#x27;</span>,  Not supported.</span><br><span class="line">    kCMPixelFormat_16LE555         = <span class="string">&#x27;L555&#x27;</span>,  FOURCC_RGBO</span><br><span class="line">    kCMPixelFormat_16LE565         = <span class="string">&#x27;L565&#x27;</span>,  FOURCC_RGBP</span><br><span class="line">    kCMPixelFormat_16LE5551        = <span class="string">&#x27;5551&#x27;</span>,  FOURCC_RGBO</span><br><span class="line">    kCMPixelFormat_422YpCbCr8      = <span class="string">&#x27;2vuy&#x27;</span>,  FOURCC_UYVY</span><br><span class="line">    kCMPixelFormat_422YpCbCr8_yuvs = <span class="string">&#x27;yuvs&#x27;</span>,  FOURCC_YUY2</span><br><span class="line">    kCMPixelFormat_444YpCbCr8      = <span class="string">&#x27;v308&#x27;</span>,  FOURCC_I444 ?</span><br><span class="line">    kCMPixelFormat_4444YpCbCrA8    = <span class="string">&#x27;v408&#x27;</span>,  Not supported.</span><br><span class="line">    kCMPixelFormat_422YpCbCr16     = <span class="string">&#x27;v216&#x27;</span>,  Not supported.</span><br><span class="line">    kCMPixelFormat_422YpCbCr10     = <span class="string">&#x27;v210&#x27;</span>,  FOURCC_V210 previously.  Removed now.</span><br><span class="line">    kCMPixelFormat_444YpCbCr10     = <span class="string">&#x27;v410&#x27;</span>,  Not supported.</span><br><span class="line">    kCMPixelFormat_8IndexedGray_WhiteIsZero = <span class="number">0x00000028</span>,  Not supported.</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="FOURCC-Four-Charactacter-Code-List-OURCC（四个字符代码）列表"><a href="#FOURCC-Four-Charactacter-Code-List-OURCC（四个字符代码）列表" class="headerlink" title="FOURCC (Four Charactacter Code) List OURCC（四个字符代码）列表"></a>FOURCC (Four Charactacter Code) List OURCC（四个字符代码）列表</h1><p>The following is extracted from <code>video_common.h</code> as a complete list of formats supported by libyuv. </p><blockquote><p>以下是从<code>video_common.h</code>中提取的libyuv支持的格式的完整列表。</p></blockquote><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> FourCC &#123;</span><br><span class="line">    <span class="comment">// 10 Primary YUV formats: 5 planar, 2 biplanar, 2 packed.</span></span><br><span class="line">    FOURCC_I420 = FOURCC(<span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),</span><br><span class="line">    FOURCC_I422 = FOURCC(<span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;2&#x27;</span>),</span><br><span class="line">    FOURCC_I444 = FOURCC(<span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;4&#x27;</span>),</span><br><span class="line">    FOURCC_I400 = FOURCC(<span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),</span><br><span class="line">    FOURCC_NV21 = FOURCC(<span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>),</span><br><span class="line">    FOURCC_NV12 = FOURCC(<span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>),</span><br><span class="line">    FOURCC_YUY2 = FOURCC(<span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;2&#x27;</span>),</span><br><span class="line">    FOURCC_UYVY = FOURCC(<span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>),</span><br><span class="line">    FOURCC_H010 = FOURCC(<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),  <span class="comment">// unofficial fourcc. 10 bit lsb</span></span><br><span class="line">    FOURCC_U010 = FOURCC(<span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),  <span class="comment">// bt.2020, unofficial fourcc.</span></span><br><span class="line">       <span class="comment">// 10 bit lsb</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1 Secondary YUV format: row biplanar.</span></span><br><span class="line">    FOURCC_M420 = FOURCC(<span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),  <span class="comment">// deprecated.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 13 Primary RGB formats: 4 32 bpp, 2 24 bpp, 3 16 bpp, 1 10 bpc, 2 64 bpp</span></span><br><span class="line">    FOURCC_ARGB = FOURCC(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;B&#x27;</span>),</span><br><span class="line">    FOURCC_BGRA = FOURCC(<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;A&#x27;</span>),</span><br><span class="line">    FOURCC_ABGR = FOURCC(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;R&#x27;</span>),</span><br><span class="line">    FOURCC_AR30 = FOURCC(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),  <span class="comment">// 10 bit per channel. 2101010.</span></span><br><span class="line">    FOURCC_AB30 = FOURCC(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),  <span class="comment">// ABGR version of 10 bit</span></span><br><span class="line">    FOURCC_AR64 = FOURCC(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;4&#x27;</span>),  <span class="comment">// 16 bit per channel.</span></span><br><span class="line">    FOURCC_AB64 = FOURCC(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;4&#x27;</span>),  <span class="comment">// ABGR version of 16 bit</span></span><br><span class="line">    FOURCC_24BG = FOURCC(<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;G&#x27;</span>),</span><br><span class="line">    FOURCC_RAW = FOURCC(<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27; &#x27;</span>),</span><br><span class="line">    FOURCC_RGBA = FOURCC(<span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>),</span><br><span class="line">    FOURCC_RGBP = FOURCC(<span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;P&#x27;</span>),  <span class="comment">// rgb565 LE.</span></span><br><span class="line">    FOURCC_RGBO = FOURCC(<span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;O&#x27;</span>),  <span class="comment">// argb1555 LE.</span></span><br><span class="line">    FOURCC_R444 = FOURCC(<span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;4&#x27;</span>),  <span class="comment">// argb4444 LE.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1 Primary Compressed YUV format.</span></span><br><span class="line">    FOURCC_MJPG = FOURCC(<span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;G&#x27;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 11 Auxiliary YUV variations: 3 with U and V planes are swapped, 1 Alias.</span></span><br><span class="line">    FOURCC_YV12 = FOURCC(<span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>),</span><br><span class="line">    FOURCC_YV16 = FOURCC(<span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;6&#x27;</span>),</span><br><span class="line">    FOURCC_YV24 = FOURCC(<span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;4&#x27;</span>),</span><br><span class="line">    FOURCC_YU12 = FOURCC(<span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>),  <span class="comment">// Linux version of I420.</span></span><br><span class="line">    FOURCC_J420 = FOURCC(<span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),</span><br><span class="line">    FOURCC_J400 = FOURCC(<span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),  <span class="comment">// unofficial fourcc</span></span><br><span class="line">    FOURCC_H420 = FOURCC(<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),  <span class="comment">// unofficial fourcc</span></span><br><span class="line">    FOURCC_H422 = FOURCC(<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;2&#x27;</span>),  <span class="comment">// unofficial fourcc</span></span><br><span class="line">    FOURCC_U420 = FOURCC(<span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>),  <span class="comment">// bt.2020, unofficial fourcc</span></span><br><span class="line">    FOURCC_U422 = FOURCC(<span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;2&#x27;</span>),  <span class="comment">// bt.2020, unofficial fourcc</span></span><br><span class="line">    FOURCC_U444 = FOURCC(<span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;4&#x27;</span>),  <span class="comment">// bt.2020, unofficial fourcc</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 14 Auxiliary aliases.  CanonicalFourCC() maps these to canonical fourcc.</span></span><br><span class="line">    FOURCC_IYUV = FOURCC(<span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;V&#x27;</span>),  <span class="comment">// Alias for I420.</span></span><br><span class="line">    FOURCC_YU16 = FOURCC(<span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;6&#x27;</span>),  <span class="comment">// Alias for I422.</span></span><br><span class="line">    FOURCC_YU24 = FOURCC(<span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;4&#x27;</span>),  <span class="comment">// Alias for I444.</span></span><br><span class="line">    FOURCC_YUYV = FOURCC(<span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;V&#x27;</span>),  <span class="comment">// Alias for YUY2.</span></span><br><span class="line">    FOURCC_YUVS = FOURCC(<span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;s&#x27;</span>),  <span class="comment">// Alias for YUY2 on Mac.</span></span><br><span class="line">    FOURCC_HDYC = FOURCC(<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;C&#x27;</span>),  <span class="comment">// Alias for UYVY.</span></span><br><span class="line">    FOURCC_2VUY = FOURCC(<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;y&#x27;</span>),  <span class="comment">// Alias for UYVY on Mac.</span></span><br><span class="line">    FOURCC_JPEG = FOURCC(<span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;G&#x27;</span>),  <span class="comment">// Alias for MJPG.</span></span><br><span class="line">    FOURCC_DMB1 = FOURCC(<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;1&#x27;</span>),  <span class="comment">// Alias for MJPG on Mac.</span></span><br><span class="line">    FOURCC_BA81 = FOURCC(<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;1&#x27;</span>),  <span class="comment">// Alias for BGGR.</span></span><br><span class="line">    FOURCC_RGB3 = FOURCC(<span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;3&#x27;</span>),  <span class="comment">// Alias for RAW.</span></span><br><span class="line">    FOURCC_BGR3 = FOURCC(<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;3&#x27;</span>),  <span class="comment">// Alias for 24BG.</span></span><br><span class="line">    FOURCC_CM32 = FOURCC(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">32</span>),  <span class="comment">// Alias for BGRA kCMPixelFormat_32ARGB</span></span><br><span class="line">    FOURCC_CM24 = FOURCC(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">24</span>),  <span class="comment">// Alias for RAW kCMPixelFormat_24RGB</span></span><br><span class="line">    FOURCC_L555 = FOURCC(<span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;5&#x27;</span>),  <span class="comment">// Alias for RGBO.</span></span><br><span class="line">    FOURCC_L565 = FOURCC(<span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;5&#x27;</span>),  <span class="comment">// Alias for RGBP.</span></span><br><span class="line">    FOURCC_5551 = FOURCC(<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;1&#x27;</span>),  <span class="comment">// Alias for RGBO.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Planar-YUV-平面YUV"><a href="#Planar-YUV-平面YUV" class="headerlink" title="Planar YUV 平面YUV"></a>Planar YUV 平面YUV</h1><p>The following formats contains a full size Y plane followed by 1 or 2 planes for UV:</p><blockquote><p>以下格式包含一个全尺寸Y平面，后面是1或2个UV平面</p></blockquote><p> I420, I422, I444, I400, NV21, NV12, I400<br>The size (subsampling) of the UV varies.</p><blockquote><p>UV的大小（子采样）会发生变化。</p></blockquote><p>I420, NV12 and NV21 are half width, half height<br>I422, NV16 and NV61 are half width, full height<br>I444, NV24 and NV42 are full width, full height<br>I400 and J400 have no chroma channel.</p><h1 id="Color-space-颜色空间"><a href="#Color-space-颜色空间" class="headerlink" title="Color space 颜色空间"></a>Color space 颜色空间</h1><p>The YUV formats start with a letter to specify the color space. e.g. I420</p><blockquote><p>YUV格式以字母开头以指定颜色空间。例如I420</p></blockquote><p>I &#x3D; BT.601 limited range<br>J &#x3D; BT.601 full range     (J &#x3D; JPEG that uses this)<br>H &#x3D; BT.709 limited range  (H for HD)<br>F &#x3D; BT.709 full range     (F for Full range)<br>U &#x3D; BT.2020 limited range (U for UHD)<br>V &#x3D; BT.2020 full range<br>For YUV to RGB conversions, a matrix can be passed.  See also <code>convert_argh.h</code></p><blockquote><p>对于YUV到RGB的转换，可以传递一个矩阵。另请参见 <code>convert_argh.h</code></p></blockquote><h1 id="HDR-formats-HDR格式"><a href="#HDR-formats-HDR格式" class="headerlink" title="HDR formats HDR格式"></a>HDR formats HDR格式</h1><p>Planar formats with 10 or 12 bits use the following fourcc:</p><blockquote><p>具有10或12位的平面格式使用以下fourcc：</p></blockquote><p>I010, I012, P010, P012 are half width, half height<br>I210, I212, P210, P212 are half width, full height<br>I410, I412, P410, P412 are full width, full height<br>where</p><blockquote><p>解释</p></blockquote><p>I is the color space (see above) and 3 planes: Y, U and V.</p><blockquote><p>I是颜色空间（见上文）和3个平面：Y、U和V。</p></blockquote><p>P is a biplanar format, similar to NV12 but 16 bits, with the valid bits in the high bits.  There is a Y plane and a UV plane.</p><blockquote><p>P是一种双平面格式，类似于NV12，但16位，有效位在高位。有一个Y平面和一个UV平面。</p></blockquote><p>0, 2 or 4 is the last digit of subsampling: 4:2:0, 4:2:2, or 4:4:4</p><blockquote><p>0、2或4是子采样的最后一位：4:2:0、4:2:2或4:4:4</p></blockquote><p>10 or 12 is the bits per channel.  The bits are in the low bits of a 16 bit channel.</p><blockquote><p>10或12是每个信道的比特。这些位位于16位信道的低位。</p></blockquote><h1 id="The-ARGB-FOURCC"><a href="#The-ARGB-FOURCC" class="headerlink" title="The ARGB FOURCC"></a>The ARGB FOURCC</h1><p>There are 4 ARGB layouts - ARGB, BGRA, ABGR and RGBA. ARGB is most common by far, used for screen formats, and windows webcam drivers.</p><blockquote><p>有4种ARGB布局-ARGB、BGRA、ABGR和RGBA。ARGB是目前最常见的，用于屏幕格式和windows网络摄像头驱动程序。</p></blockquote><p>The fourcc describes the order of channels in a <em><strong>register</strong></em>.</p><blockquote><p>fourcc描述<strong>寄存器</strong>中通道的顺序。</p></blockquote><p>A fourcc provided by capturer, can be thought of string, e.g. “ARGB”.</p><blockquote><p>capturer提供的fourcc可以被认为是字符串，例如“ARGB”。</p></blockquote><p>On little endian machines, as an int, this would have ‘A’ in the lowest byte. The FOURCC macro reverses the order:</p><blockquote><p>在little-endian机器上，作为一个int，它将在最低字节中包含“A”。FOURCC宏的顺序相反：</p></blockquote><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> FOURCC(a, b, c, d) (((uint32)(a)) | ((uint32)(b) &lt;&lt; 8) | ((uint32)(c) &lt;&lt; 16) | ((uint32)(d) &lt;&lt; 24))</span></span><br></pre></td></tr></table></figure><p>So the “ARGB” string, read as an uint32, is</p><blockquote><p>因此，读取为uint32的“ARGB”字符串是</p></blockquote><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FOURCC_ARGB = FOURCC(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;B&#x27;</span>)</span><br></pre></td></tr></table></figure><p>If you were to read ARGB pixels as uint32’s, the alpha would be in the high byte, and the blue in the lowest byte. In memory, these are stored little endian, so ‘B’ is first, then ‘G’, ‘R’ and ‘A’ last.</p><blockquote><p>如果要将ARGB像素读取为uint32，则alpha位于高位字节，而蓝色位于低位字节。在内存中，这些都是小端的，所以“B”是第一个，然后是“G”、“R”和“A”是最后一个。</p></blockquote><p>When calling conversion functions, the names match the FOURCC, so in this case it would be I420ToARGB().</p><blockquote><p>当调用转换函数时，名称与FOURCC匹配，因此在本例中它将是I420ToARGB（）。</p></blockquote><p>All formats can be converted to&#x2F;from ARGB.</p><blockquote><p>所有格式都可以转换为ARGB格式。</p></blockquote><p>Most ‘planar_functions’ work on ARGB (e.g. ARGBBlend).</p><blockquote><p>大多数“planar_functions”在ARGB上工作（例如ARGBLend）。</p></blockquote><p>Some are channel order agnostic (e.g. ARGBScale).</p><blockquote><p>有些是信道顺序不可知的（例如ARGBScale）。</p></blockquote><p>Some functions are symmetric (e.g. ARGBToBGRA is the same as BGRAToARGB, so its a macro).</p><blockquote><p>有些函数是对称的（例如，ARGBToBGRA与BGRAToARGB相同，因此它是一个宏）。</p></blockquote><p>ARGBBlend expects preattenuated ARGB. The R,G,B are premultiplied by alpha. Other functions don’t care.</p><blockquote><p>ARGBBlend预期为预先评估的ARGB。R、G、B被α预乘。其他功能无关紧要。</p></blockquote><h1 id="RGB24-and-RAW"><a href="#RGB24-and-RAW" class="headerlink" title="RGB24 and RAW"></a>RGB24 and RAW</h1><p>There are 2 RGB layouts - RGB24 (aka 24BG) and RAW</p><blockquote><p>RGB24（又名24BG）和RAW有2种RGB布局</p></blockquote><p>RGB24 is B,G,R in memory </p><blockquote><p>RGB24在内存中为B、G、R</p></blockquote><p>RAW is R,G,B in memory</p><blockquote><p>RAW是内存中的R、G、B</p></blockquote><h1 id="AR30-and-XR30"><a href="#AR30-and-XR30" class="headerlink" title="AR30 and XR30"></a>AR30 and XR30</h1><p>AR30 is 2 10 10 10 ARGB stored in little endian order. </p><blockquote><p>AR30是以小端顺序存储的2 10 10 10 ARGB。</p></blockquote><p>The 2 bit alpha has 4 values. Here are the comparable 8 bit alpha values. </p><blockquote><p>2位alpha有4个值。以下是可比较的8位alpha值。</p></blockquote><p>0 - 0. 00000000b &#x3D; 0x00 &#x3D; 0<br>1 - 33%. 01010101b &#x3D; 0x55 &#x3D; 85<br>2 - 66%. 10101010b &#x3D; 0xaa &#x3D; 170<br>3 - 100%. 11111111b &#x3D; 0xff &#x3D; 255<br>The 10 bit RGB values range from 0 to 1023. </p><blockquote><p>10位RGB值的范围从0到1023。</p></blockquote><p>XR30 is the same as AR30 but with no alpha channel.</p><blockquote><p>XR30与AR30相同，但没有阿尔法通道。</p></blockquote><h1 id="AB64-and-AR64"><a href="#AB64-and-AR64" class="headerlink" title="AB64 and AR64"></a>AB64 and AR64</h1><p>AB64 is similar to ABGR, with 16 bit (2 bytes) per channel. Each channel stores an unsigned short. </p><blockquote><p>AB64类似于ABGR，每个通道16位（2字节）。每个通道存储一个无符号短。</p></blockquote><p>In memory R is the lowest and A is the highest. </p><blockquote><p>在存储器中，R是最低的，A是最高的。</p></blockquote><p>Each channel has value ranges from 0 to 65535. </p><blockquote><p>每个通道的值范围从0到65535。</p></blockquote><p>AR64 is similar to ARGB.</p><blockquote><p>AR64与ARGB相似。</p></blockquote><h1 id="NV12-and-NV21"><a href="#NV12-and-NV21" class="headerlink" title="NV12 and NV21"></a>NV12 and NV21</h1><p>NV12 is a biplanar format with a full sized Y plane followed by a single chroma plane with weaved U and V values. </p><blockquote><p>NV12是一种双平面格式，其具有全尺寸Y平面，随后是具有编织U和V值的单个色度平面。</p></blockquote><p>NV21 is the same but with weaved V and U values. </p><blockquote><p>NV21相同，但具有编织的V和U值。</p></blockquote><p>The 12 in NV12 refers to 12 bits per pixel. NV12 has a half width and half height chroma channel, and therefore is a 420 subsampling. </p><blockquote><p>NV12中的12表示每像素12位。NV12具有半宽和半高色度通道，因此是420次采样。</p></blockquote><p>NV16 is 16 bits per pixel, with half width and full height. aka 422. </p><blockquote><p>NV16为每像素16位，具有半宽和全高。即422。</p></blockquote><p>NV24 is 24 bits per pixel with full sized chroma channel. aka 444. </p><blockquote><p>NV24是具有全尺寸色度通道的每像素24位。又名444。</p></blockquote><p>Most NV12 functions allow the destination Y pointer to be NULL.</p><blockquote><p>大多数NV12函数允许目标Y指针为NULL。</p></blockquote><h1 id="YUY2-and-UYVY"><a href="#YUY2-and-UYVY" class="headerlink" title="YUY2 and UYVY"></a>YUY2 and UYVY</h1><p>YUY2 is a packed YUV format with half width, full height.</p><blockquote><p>YUY2是一种半宽全高的压缩YUV格式。</p></blockquote><p>YUY2 is YUYV in memory </p><blockquote><p>YUY2在内存中为Y、U、Y、V</p></blockquote><p>UYVY is UYVY in memory</p><blockquote><p>UYVY在内存中为U、Y、V、Y</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/whileTrue0x90/libyuv/blob/main/docs/formats.md&quot;&gt;https://github.com/whileTrue0x90/libyuv/blob/main/docs/format</summary>
      
    
    
    
    <category term="源码阅读" scheme="http://www.5isan.com/categories/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="libyuv" scheme="http://www.5isan.com/tags/libyuv/"/>
    
  </entry>
  
  <entry>
    <title>libyuv 源码阅读 00 准备阶段</title>
    <link href="http://www.5isan.com/2023/03/28/libyuv-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-00-%E5%87%86%E5%A4%87%E9%98%B6%E6%AE%B5/"/>
    <id>http://www.5isan.com/2023/03/28/libyuv-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-00-%E5%87%86%E5%A4%87%E9%98%B6%E6%AE%B5/</id>
    <published>2023-03-28T02:25:46.000Z</published>
    <updated>2023-03-29T02:37:09.949Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h1><p>源码地址: <a href="https://chromium.googlesource.com/libyuv/libyuv/">https://chromium.googlesource.com/libyuv/libyuv/</a><br>镜像地址: <a href="https://github.com/whileTrue0x90/libyuv.git">https://github.com/whileTrue0x90/libyuv.git</a></p><blockquote><p>同步 chromium 仓库 至 github 仓库命令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone --mirror https://chromium.googlesource.com/libyuv/libyuv/</span><br><span class="line">cd libyuv.git</span><br><span class="line">git fetch -p origin</span><br><span class="line">git push --mirror https://github.com/whileTrue0x90/libyuv.git</span><br></pre></td></tr></table></figure><h1 id="README"><a href="#README" class="headerlink" title="README"></a><a href="https://github.com/whileTrue0x90/libyuv/blob/main/README.md">README</a></h1><p><strong>libyuv</strong> is an open source project that includes YUV scaling and conversion functionality.</p><ul><li>Scale YUV to prepare content for compression, with point, bilinear or box filter.</li><li>Convert to YUV from webcam formats for compression.</li><li>Convert to RGB formats for rendering&#x2F;effects.</li><li>Rotate by 90&#x2F;180&#x2F;270 degrees to adjust for mobile devices in portrait mode.</li><li>Optimized for SSSE3&#x2F;AVX2 on x86&#x2F;x64.</li><li>Optimized for Neon on Arm.</li><li>Optimized for MSA on Mips.</li></ul><h3 id="Development"><a href="#Development" class="headerlink" title="Development"></a>Development</h3><p>See <a href="https://github.com/whileTrue0x90/libyuv/blob/main/docs/getting_started.md">Getting started</a> for instructions on how to get started developing.<br>You can also browse the <a href="https://github.com/whileTrue0x90/libyuv/blob/main/docs">docs directory</a> for more documentation.</p><h1 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a><a href="https://github.com/whileTrue0x90/libyuv/blob/main/docs/getting_started.md">Getting Started</a></h1><p>How to get and build the libyuv code.</p><h2 id="Pre-requisites"><a href="#Pre-requisites" class="headerlink" title="Pre-requisites"></a>Pre-requisites</h2><p>You’ll need to have depot tools installed: <a href="https://www.chromium.org/developers/how-tos/install-depot-tools">https://www.chromium.org/developers/how-tos/install-depot-tools</a> Refer to chromium instructions for each platform for other prerequisites.</p><h2 id="Getting-the-Code"><a href="#Getting-the-Code" class="headerlink" title="Getting the Code"></a>Getting the Code</h2><p>Create a working directory, enter it, and run:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gclient config --name src https://chromium.googlesource.com/libyuv/libyuv</span><br><span class="line">gclient sync</span><br></pre></td></tr></table></figure><p>Then you’ll get a .gclient file like:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">solutions = [</span><br><span class="line">  &#123; &quot;name&quot;        : &quot;src&quot;,</span><br><span class="line">    &quot;url&quot;         : &quot;https://chromium.googlesource.com/libyuv/libyuv&quot;,</span><br><span class="line">    &quot;deps_file&quot;   : &quot;DEPS&quot;,</span><br><span class="line">    &quot;managed&quot;     : True,</span><br><span class="line">    &quot;custom_deps&quot; : &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;safesync_url&quot;: &quot;&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>For iOS add <code>;target_os=[&#39;ios&#39;];</code> to your OSX .gclient and run <code>gclient sync</code>.<br>Browse the Git reprository: <a href="https://chromium.googlesource.com/libyuv/libyuv/+/master">https://chromium.googlesource.com/libyuv/libyuv/+/master</a></p><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><p>For Android add <code>;target_os=[&#39;android&#39;];</code> to your Linux .gclient</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">solutions = [</span><br><span class="line">  &#123; &quot;name&quot;        : &quot;src&quot;,</span><br><span class="line">    &quot;url&quot;         : &quot;https://chromium.googlesource.com/libyuv/libyuv&quot;,</span><br><span class="line">    &quot;deps_file&quot;   : &quot;DEPS&quot;,</span><br><span class="line">    &quot;managed&quot;     : True,</span><br><span class="line">    &quot;custom_deps&quot; : &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;safesync_url&quot;: &quot;&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">target_os = [&quot;android&quot;, &quot;linux&quot;];</span><br></pre></td></tr></table></figure><p>Then run:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gclient sync</span><br></pre></td></tr></table></figure><p>To get just the source (not buildable):</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://chromium.googlesource.com/libyuv/libyuv</span><br></pre></td></tr></table></figure><h2 id="Building-the-Library-and-Unittests"><a href="#Building-the-Library-and-Unittests" class="headerlink" title="Building the Library and Unittests"></a>Building the Library and Unittests</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">call gn gen out\Release &quot;--args=is_debug=false target_cpu=\&quot;x64\&quot;&quot;</span><br><span class="line">call gn gen out\Debug &quot;--args=is_debug=true target_cpu=\&quot;x64\&quot;&quot;</span><br><span class="line">ninja -v -C out\Release</span><br><span class="line">ninja -v -C out\Debug</span><br><span class="line"></span><br><span class="line">call gn gen out\Release &quot;--args=is_debug=false target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">call gn gen out\Debug &quot;--args=is_debug=true target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">ninja -v -C out\Release</span><br><span class="line">ninja -v -C out\Debug</span><br></pre></td></tr></table></figure><h3 id="macOS-and-Linux"><a href="#macOS-and-Linux" class="headerlink" title="macOS and Linux"></a>macOS and Linux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true&quot;</span><br><span class="line">ninja -v -C out/Release</span><br><span class="line">ninja -v -C out/Debug</span><br></pre></td></tr></table></figure><h3 id="Building-Offical-with-GN"><a href="#Building-Offical-with-GN" class="headerlink" title="Building Offical with GN"></a>Building Offical with GN</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Official &quot;--args=is_debug=false is_official_build=true is_chrome_branded=true&quot;</span><br><span class="line">ninja -C out/Official</span><br></pre></td></tr></table></figure><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p><a href="http://www.chromium.org/developers/how-tos/build-instructions-ios">http://www.chromium.org/developers/how-tos/build-instructions-ios</a><br>Add to .gclient last line: <code>target_os=[&#39;ios&#39;];</code><br>arm64</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;ios\&quot; ios_enable_code_signing=false target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;ios\&quot; ios_enable_code_signing=false target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>ios simulator</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;ios\&quot; ios_enable_code_signing=false use_xcode_clang=true target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;ios\&quot; ios_enable_code_signing=false use_xcode_clang=true target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>ios disassembly</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">otool -tV ./out/Release/obj/libyuv_neon/row_neon64.o &gt;row_neon64.txt</span><br></pre></td></tr></table></figure><h3 id="Android-1"><a href="#Android-1" class="headerlink" title="Android"></a>Android</h3><p><a href="https://code.google.com/p/chromium/wiki/AndroidBuildInstructions">https://code.google.com/p/chromium/wiki/AndroidBuildInstructions</a><br>Add to .gclient last line: <code>target_os=[&#39;android&#39;];</code><br>arm64</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;android\&quot; target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;android\&quot; target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>armv7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;android\&quot; target_cpu=\&quot;arm\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;android\&quot; target_cpu=\&quot;arm\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>ia32</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;android\&quot; target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;android\&quot; target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>mips</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;android\&quot; target_cpu=\&quot;mips64el\&quot; mips_arch_variant=\&quot;r6\&quot; mips_use_msa=true is_component_build=true&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;android\&quot; target_cpu=\&quot;mips64el\&quot; mips_arch_variant=\&quot;r6\&quot; mips_use_msa=true is_component_build=true&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>arm disassembly:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">third_party/android_ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-objdump -d ./out/Release/obj/libyuv/row_common.o &gt;row_common.txt</span><br><span class="line"></span><br><span class="line">third_party/android_ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-objdump -d ./out/Release/obj/libyuv_neon/row_neon.o &gt;row_neon.txt</span><br><span class="line"></span><br><span class="line">third_party/android_ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-objdump -d ./out/Release/obj/libyuv_neon/row_neon64.o &gt;row_neon64.txt</span><br><span class="line"></span><br><span class="line">Caveat: Disassembly may require optimize_max be disabled in BUILD.gn</span><br></pre></td></tr></table></figure><p>Running tests:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out/Release/bin/run_libyuv_unittest -vv --gtest_filter=*</span><br></pre></td></tr></table></figure><p>Running test as benchmark:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out/Release/bin/run_libyuv_unittest -vv --gtest_filter=* --libyuv_width=1280 --libyuv_height=720 --libyuv_repeat=999 --libyuv_flags=-1  --libyuv_cpu_info=-1</span><br></pre></td></tr></table></figure><p>Running test with C code:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out/Release/bin/run_libyuv_unittest -vv --gtest_filter=* --libyuv_width=1280 --libyuv_height=720 --libyuv_repeat=999 --libyuv_flags=1 --libyuv_cpu_info=1</span><br></pre></td></tr></table></figure><h3 id="Build-targets"><a href="#Build-targets" class="headerlink" title="Build targets"></a>Build targets</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ninja -C out/Debug libyuv</span><br><span class="line">ninja -C out/Debug libyuv_unittest</span><br><span class="line">ninja -C out/Debug compare</span><br><span class="line">ninja -C out/Debug yuvconvert</span><br><span class="line">ninja -C out/Debug yuvconstants</span><br><span class="line">ninja -C out/Debug psnr</span><br><span class="line">ninja -C out/Debug cpuid</span><br></pre></td></tr></table></figure><h3 id="ARM-Linux"><a href="#ARM-Linux" class="headerlink" title="ARM Linux"></a>ARM Linux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><h3 id="MIPS-Linux"><a href="#MIPS-Linux" class="headerlink" title="MIPS Linux"></a>MIPS Linux</h3><p>mips</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=&quot;linux&quot; target_cpu=&quot;mips64el&quot; mips_arch_variant=&quot;loongson3&quot; is_component_build=false use_sysroot=false use_gold=false&quot; </span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=&quot;linux&quot; target_cpu=&quot;mips64el&quot; mips_arch_variant=&quot;loongson3&quot; is_component_build=false use_sysroot=false use_gold=false&quot; </span><br><span class="line">ninja -v -C out/Debug libyuv_unittest </span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><h2 id="Building-the-Library-with-make"><a href="#Building-the-Library-with-make" class="headerlink" title="Building the Library with make"></a>Building the Library with make</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make V=1 -f linux.mk</span><br><span class="line">make V=1 -f linux.mk clean</span><br><span class="line">make V=1 -f linux.mk CXX=clang++ CC=clang</span><br></pre></td></tr></table></figure><h2 id="Building-the-library-with-cmake"><a href="#Building-the-library-with-cmake" class="headerlink" title="Building the library with cmake"></a>Building the library with cmake</h2><p>Install cmake: <a href="http://www.cmake.org/">http://www.cmake.org/</a></p><h3 id="Default-debug-build"><a href="#Default-debug-build" class="headerlink" title="Default debug build:"></a>Default debug build:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir out</span><br><span class="line">cd out</span><br><span class="line">cmake ..</span><br><span class="line">cmake --build .</span><br></pre></td></tr></table></figure><h3 id="Release-build-x2F-install"><a href="#Release-build-x2F-install" class="headerlink" title="Release build&#x2F;install"></a>Release build&#x2F;install</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir out</span><br><span class="line">cd out</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=&quot;/usr/lib&quot; -DCMAKE_BUILD_TYPE=&quot;Release&quot; ..</span><br><span class="line">cmake --build . --config Release</span><br><span class="line">sudo cmake --build . --target install --config Release</span><br></pre></td></tr></table></figure><h3 id="Build-RPM-x2F-DEB-packages"><a href="#Build-RPM-x2F-DEB-packages" class="headerlink" title="Build RPM&#x2F;DEB packages"></a>Build RPM&#x2F;DEB packages</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir out</span><br><span class="line">cd out</span><br><span class="line">cmake -DCMAKE_BUILD_TYPE=Release ..</span><br><span class="line">make -j4</span><br><span class="line">make package</span><br></pre></td></tr></table></figure><h2 id="Setup-for-Arm-Cross-compile"><a href="#Setup-for-Arm-Cross-compile" class="headerlink" title="Setup for Arm Cross compile"></a>Setup for Arm Cross compile</h2><p>See also <a href="https://www.ccoderun.ca/programming/2015-12-20_CrossCompiling/index.html">https://www.ccoderun.ca/programming/2015-12-20_CrossCompiling&#x2F;index.html</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ssh dkms build-essential linux-headers-generic</span><br><span class="line">sudo apt-get install kdevelop cmake git subversion</span><br><span class="line">sudo apt-get install graphviz doxygen doxygen-gui</span><br><span class="line">sudo apt-get install manpages manpages-dev manpages-posix manpages-posix-dev</span><br><span class="line">sudo apt-get install libboost-all-dev libboost-dev libssl-dev</span><br><span class="line">sudo apt-get install rpm terminator fish</span><br><span class="line">sudo apt-get install g++-arm-linux-gnueabihf gcc-arm-linux-gnueabihf</span><br></pre></td></tr></table></figure><h3 id="Build-psnr-tool"><a href="#Build-psnr-tool" class="headerlink" title="Build psnr tool"></a>Build psnr tool</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd util</span><br><span class="line">arm-linux-gnueabihf-g++ psnr_main.cc psnr.cc ssim.cc -o psnr</span><br><span class="line">arm-linux-gnueabihf-objdump -d psnr</span><br></pre></td></tr></table></figure><h2 id="Running-Unittests"><a href="#Running-Unittests" class="headerlink" title="Running Unittests"></a>Running Unittests</h2><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out\Release\libyuv_unittest.exe --gtest_catch_exceptions=0 --gtest_filter=&quot;*&quot;</span><br></pre></td></tr></table></figure><h3 id="macOS-and-Linux-1"><a href="#macOS-and-Linux-1" class="headerlink" title="macOS and Linux"></a>macOS and Linux</h3><p>ou</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out/Release/libyuv_unittest --gtest_filter=&quot;*&quot;</span><br></pre></td></tr></table></figure><p>Replace –gtest_filter&#x3D;”*” with specific unittest to run. May include wildcards. out&#x2F;Release&#x2F;libyuv_unittest –gtest_filter&#x3D;*I420ToARGB_Opt</p><h2 id="CPU-Emulator-tools"><a href="#CPU-Emulator-tools" class="headerlink" title="CPU Emulator tools"></a>CPU Emulator tools</h2><h3 id="Intel-SDE-Software-Development-Emulator"><a href="#Intel-SDE-Software-Development-Emulator" class="headerlink" title="Intel SDE (Software Development Emulator)"></a>Intel SDE (Software Development Emulator)</h3><p>Pre-requisite: Install IntelSDE: <a href="http://software.intel.com/en-us/articles/intel-software-development-emulator">http://software.intel.com/en-us/articles/intel-software-development-emulator</a><br>Then run:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c:\intelsde\sde -hsw -- out\Release\libyuv_unittest.exe --gtest_filter=*</span><br><span class="line"></span><br><span class="line">~/intelsde/sde -skx -- out/Release/libyuv_unittest --gtest_filter=**I420ToARGB_Opt</span><br></pre></td></tr></table></figure><h3 id="Intel-Architecture-Code-Analyzer"><a href="#Intel-Architecture-Code-Analyzer" class="headerlink" title="Intel Architecture Code Analyzer"></a>Intel Architecture Code Analyzer</h3><p>Inset these 2 macros into assembly code to be analyzed:<br>IACA_ASM_START<br>IACA_ASM_END<br>Build the code as usual, then run iaca on the object file.<br>~&#x2F;iaca-lin64&#x2F;bin&#x2F;iaca.sh -reduceout -arch HSW out&#x2F;Release&#x2F;obj&#x2F;libyuv_internal&#x2F;compare_gcc.o</p><h2 id="Sanitizers"><a href="#Sanitizers" class="headerlink" title="Sanitizers"></a>Sanitizers</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false is_msan=true&quot;</span><br><span class="line">ninja -v -C out/Release</span><br></pre></td></tr></table></figure><h3 id="Running-Dr-Memory-memcheck-for-Windows"><a href="#Running-Dr-Memory-memcheck-for-Windows" class="headerlink" title="Running Dr Memory memcheck for Windows"></a>Running Dr Memory memcheck for Windows</h3><p>Pre-requisite: Install Dr Memory for Windows and add it to your path: <a href="http://www.drmemory.org/docs/page_install_windows.html">http://www.drmemory.org/docs/page_install_windows.html</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drmemory out\Debug\libyuv_unittest.exe --gtest_catch_exceptions=0 --gtest_filter=*</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;代码下载&quot;&gt;&lt;a href=&quot;#代码下载&quot; class=&quot;headerlink&quot; title=&quot;代码下载&quot;&gt;&lt;/a&gt;代码下载&lt;/h1&gt;&lt;p&gt;源码地址: &lt;a href=&quot;https://chromium.googlesource.com/libyuv/libyuv</summary>
      
    
    
    
    <category term="源码阅读" scheme="http://www.5isan.com/categories/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="libyuv" scheme="http://www.5isan.com/tags/libyuv/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.5isan.com/2023/03/18/hello-world/"/>
    <id>http://www.5isan.com/2023/03/18/hello-world/</id>
    <published>2023-03-18T11:51:32.948Z</published>
    <updated>2023-03-18T11:51:32.948Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
