<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>whileTrue0x90&#39;s blog</title>
  
  <subtitle>乾坤未定, 你我皆是黑马</subtitle>
  <link href="http://www.5isan.com/atom.xml" rel="self"/>
  
  <link href="http://www.5isan.com/"/>
  <updated>2023-03-28T02:31:17.854Z</updated>
  <id>http://www.5isan.com/</id>
  
  <author>
    <name>whileTrue0x90</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>libyuv 源码阅读 00 准备阶段</title>
    <link href="http://www.5isan.com/2023/03/28/libyuv-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-00-%E5%87%86%E5%A4%87%E9%98%B6%E6%AE%B5/"/>
    <id>http://www.5isan.com/2023/03/28/libyuv-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-00-%E5%87%86%E5%A4%87%E9%98%B6%E6%AE%B5/</id>
    <published>2023-03-28T02:25:46.000Z</published>
    <updated>2023-03-28T02:31:17.854Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h1><p>源码地址: <a href="https://chromium.googlesource.com/libyuv/libyuv/">https://chromium.googlesource.com/libyuv/libyuv/</a><br>镜像地址: <a href="https://github.com/whileTrue0x90/libyuv.git">https://github.com/whileTrue0x90/libyuv.git</a></p><p>同步 chromium 仓库 至 github 仓库命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone --mirror https://chromium.googlesource.com/libyuv/libyuv/</span><br><span class="line">cd libyuv.git</span><br><span class="line">git fetch -p origin</span><br><span class="line">git push --mirror https://github.com/whileTrue0x90/libyuv.git</span><br></pre></td></tr></table></figure><h1 id="README"><a href="#README" class="headerlink" title="README"></a><a href="https://github.com/whileTrue0x90/libyuv/blob/main/README.md">README</a></h1><p><strong>libyuv</strong> is an open source project that includes YUV scaling and conversion functionality.</p><ul><li>Scale YUV to prepare content for compression, with point, bilinear or box filter.</li><li>Convert to YUV from webcam formats for compression.</li><li>Convert to RGB formats for rendering&#x2F;effects.</li><li>Rotate by 90&#x2F;180&#x2F;270 degrees to adjust for mobile devices in portrait mode.</li><li>Optimized for SSSE3&#x2F;AVX2 on x86&#x2F;x64.</li><li>Optimized for Neon on Arm.</li><li>Optimized for MSA on Mips.</li></ul><h3 id="Development"><a href="#Development" class="headerlink" title="Development"></a>Development</h3><p>See <a href="https://github.com/whileTrue0x90/libyuv/blob/main/docs/getting_started.md">Getting started</a> for instructions on how to get started developing.<br>You can also browse the <a href="https://github.com/whileTrue0x90/libyuv/blob/main/docs">docs directory</a> for more documentation.</p><h1 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a><a href="https://github.com/whileTrue0x90/libyuv/blob/main/docs/getting_started.md">Getting Started</a></h1><p>How to get and build the libyuv code.</p><h2 id="Pre-requisites"><a href="#Pre-requisites" class="headerlink" title="Pre-requisites"></a>Pre-requisites</h2><p>You’ll need to have depot tools installed: <a href="https://www.chromium.org/developers/how-tos/install-depot-tools">https://www.chromium.org/developers/how-tos/install-depot-tools</a> Refer to chromium instructions for each platform for other prerequisites.</p><h2 id="Getting-the-Code"><a href="#Getting-the-Code" class="headerlink" title="Getting the Code"></a>Getting the Code</h2><p>Create a working directory, enter it, and run:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gclient config --name src https://chromium.googlesource.com/libyuv/libyuv</span><br><span class="line">gclient sync</span><br></pre></td></tr></table></figure><p>Then you’ll get a .gclient file like:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">solutions = [</span><br><span class="line">  &#123; &quot;name&quot;        : &quot;src&quot;,</span><br><span class="line">    &quot;url&quot;         : &quot;https://chromium.googlesource.com/libyuv/libyuv&quot;,</span><br><span class="line">    &quot;deps_file&quot;   : &quot;DEPS&quot;,</span><br><span class="line">    &quot;managed&quot;     : True,</span><br><span class="line">    &quot;custom_deps&quot; : &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;safesync_url&quot;: &quot;&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>For iOS add <code>;target_os=[&#39;ios&#39;];</code> to your OSX .gclient and run <code>gclient sync</code>.<br>Browse the Git reprository: <a href="https://chromium.googlesource.com/libyuv/libyuv/+/master">https://chromium.googlesource.com/libyuv/libyuv/+/master</a></p><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><p>For Android add <code>;target_os=[&#39;android&#39;];</code> to your Linux .gclient</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">solutions = [</span><br><span class="line">  &#123; &quot;name&quot;        : &quot;src&quot;,</span><br><span class="line">    &quot;url&quot;         : &quot;https://chromium.googlesource.com/libyuv/libyuv&quot;,</span><br><span class="line">    &quot;deps_file&quot;   : &quot;DEPS&quot;,</span><br><span class="line">    &quot;managed&quot;     : True,</span><br><span class="line">    &quot;custom_deps&quot; : &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;safesync_url&quot;: &quot;&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">target_os = [&quot;android&quot;, &quot;linux&quot;];</span><br></pre></td></tr></table></figure><p>Then run:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gclient sync</span><br></pre></td></tr></table></figure><p>To get just the source (not buildable):</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://chromium.googlesource.com/libyuv/libyuv</span><br></pre></td></tr></table></figure><h2 id="Building-the-Library-and-Unittests"><a href="#Building-the-Library-and-Unittests" class="headerlink" title="Building the Library and Unittests"></a>Building the Library and Unittests</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">call gn gen out\Release &quot;--args=is_debug=false target_cpu=\&quot;x64\&quot;&quot;</span><br><span class="line">call gn gen out\Debug &quot;--args=is_debug=true target_cpu=\&quot;x64\&quot;&quot;</span><br><span class="line">ninja -v -C out\Release</span><br><span class="line">ninja -v -C out\Debug</span><br><span class="line"></span><br><span class="line">call gn gen out\Release &quot;--args=is_debug=false target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">call gn gen out\Debug &quot;--args=is_debug=true target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">ninja -v -C out\Release</span><br><span class="line">ninja -v -C out\Debug</span><br></pre></td></tr></table></figure><h3 id="macOS-and-Linux"><a href="#macOS-and-Linux" class="headerlink" title="macOS and Linux"></a>macOS and Linux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true&quot;</span><br><span class="line">ninja -v -C out/Release</span><br><span class="line">ninja -v -C out/Debug</span><br></pre></td></tr></table></figure><h3 id="Building-Offical-with-GN"><a href="#Building-Offical-with-GN" class="headerlink" title="Building Offical with GN"></a>Building Offical with GN</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Official &quot;--args=is_debug=false is_official_build=true is_chrome_branded=true&quot;</span><br><span class="line">ninja -C out/Official</span><br></pre></td></tr></table></figure><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p><a href="http://www.chromium.org/developers/how-tos/build-instructions-ios">http://www.chromium.org/developers/how-tos/build-instructions-ios</a><br>Add to .gclient last line: <code>target_os=[&#39;ios&#39;];</code><br>arm64</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;ios\&quot; ios_enable_code_signing=false target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;ios\&quot; ios_enable_code_signing=false target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>ios simulator</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;ios\&quot; ios_enable_code_signing=false use_xcode_clang=true target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;ios\&quot; ios_enable_code_signing=false use_xcode_clang=true target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>ios disassembly</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">otool -tV ./out/Release/obj/libyuv_neon/row_neon64.o &gt;row_neon64.txt</span><br></pre></td></tr></table></figure><h3 id="Android-1"><a href="#Android-1" class="headerlink" title="Android"></a>Android</h3><p><a href="https://code.google.com/p/chromium/wiki/AndroidBuildInstructions">https://code.google.com/p/chromium/wiki/AndroidBuildInstructions</a><br>Add to .gclient last line: <code>target_os=[&#39;android&#39;];</code><br>arm64</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;android\&quot; target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;android\&quot; target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>armv7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;android\&quot; target_cpu=\&quot;arm\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;android\&quot; target_cpu=\&quot;arm\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>ia32</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;android\&quot; target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;android\&quot; target_cpu=\&quot;x86\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>mips</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=\&quot;android\&quot; target_cpu=\&quot;mips64el\&quot; mips_arch_variant=\&quot;r6\&quot; mips_use_msa=true is_component_build=true&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=\&quot;android\&quot; target_cpu=\&quot;mips64el\&quot; mips_arch_variant=\&quot;r6\&quot; mips_use_msa=true is_component_build=true&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><p>arm disassembly:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">third_party/android_ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-objdump -d ./out/Release/obj/libyuv/row_common.o &gt;row_common.txt</span><br><span class="line"></span><br><span class="line">third_party/android_ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-objdump -d ./out/Release/obj/libyuv_neon/row_neon.o &gt;row_neon.txt</span><br><span class="line"></span><br><span class="line">third_party/android_ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-objdump -d ./out/Release/obj/libyuv_neon/row_neon64.o &gt;row_neon64.txt</span><br><span class="line"></span><br><span class="line">Caveat: Disassembly may require optimize_max be disabled in BUILD.gn</span><br></pre></td></tr></table></figure><p>Running tests:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out/Release/bin/run_libyuv_unittest -vv --gtest_filter=*</span><br></pre></td></tr></table></figure><p>Running test as benchmark:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out/Release/bin/run_libyuv_unittest -vv --gtest_filter=* --libyuv_width=1280 --libyuv_height=720 --libyuv_repeat=999 --libyuv_flags=-1  --libyuv_cpu_info=-1</span><br></pre></td></tr></table></figure><p>Running test with C code:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out/Release/bin/run_libyuv_unittest -vv --gtest_filter=* --libyuv_width=1280 --libyuv_height=720 --libyuv_repeat=999 --libyuv_flags=1 --libyuv_cpu_info=1</span><br></pre></td></tr></table></figure><h3 id="Build-targets"><a href="#Build-targets" class="headerlink" title="Build targets"></a>Build targets</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ninja -C out/Debug libyuv</span><br><span class="line">ninja -C out/Debug libyuv_unittest</span><br><span class="line">ninja -C out/Debug compare</span><br><span class="line">ninja -C out/Debug yuvconvert</span><br><span class="line">ninja -C out/Debug yuvconstants</span><br><span class="line">ninja -C out/Debug psnr</span><br><span class="line">ninja -C out/Debug cpuid</span><br></pre></td></tr></table></figure><h3 id="ARM-Linux"><a href="#ARM-Linux" class="headerlink" title="ARM Linux"></a>ARM Linux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_cpu=\&quot;arm64\&quot;&quot;</span><br><span class="line">ninja -v -C out/Debug libyuv_unittest</span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><h3 id="MIPS-Linux"><a href="#MIPS-Linux" class="headerlink" title="MIPS Linux"></a>MIPS Linux</h3><p>mips</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false target_os=&quot;linux&quot; target_cpu=&quot;mips64el&quot; mips_arch_variant=&quot;loongson3&quot; is_component_build=false use_sysroot=false use_gold=false&quot; </span><br><span class="line">gn gen out/Debug &quot;--args=is_debug=true target_os=&quot;linux&quot; target_cpu=&quot;mips64el&quot; mips_arch_variant=&quot;loongson3&quot; is_component_build=false use_sysroot=false use_gold=false&quot; </span><br><span class="line">ninja -v -C out/Debug libyuv_unittest </span><br><span class="line">ninja -v -C out/Release libyuv_unittest</span><br></pre></td></tr></table></figure><h2 id="Building-the-Library-with-make"><a href="#Building-the-Library-with-make" class="headerlink" title="Building the Library with make"></a>Building the Library with make</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make V=1 -f linux.mk</span><br><span class="line">make V=1 -f linux.mk clean</span><br><span class="line">make V=1 -f linux.mk CXX=clang++ CC=clang</span><br></pre></td></tr></table></figure><h2 id="Building-the-library-with-cmake"><a href="#Building-the-library-with-cmake" class="headerlink" title="Building the library with cmake"></a>Building the library with cmake</h2><p>Install cmake: <a href="http://www.cmake.org/">http://www.cmake.org/</a></p><h3 id="Default-debug-build"><a href="#Default-debug-build" class="headerlink" title="Default debug build:"></a>Default debug build:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir out</span><br><span class="line">cd out</span><br><span class="line">cmake ..</span><br><span class="line">cmake --build .</span><br></pre></td></tr></table></figure><h3 id="Release-build-x2F-install"><a href="#Release-build-x2F-install" class="headerlink" title="Release build&#x2F;install"></a>Release build&#x2F;install</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir out</span><br><span class="line">cd out</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=&quot;/usr/lib&quot; -DCMAKE_BUILD_TYPE=&quot;Release&quot; ..</span><br><span class="line">cmake --build . --config Release</span><br><span class="line">sudo cmake --build . --target install --config Release</span><br></pre></td></tr></table></figure><h3 id="Build-RPM-x2F-DEB-packages"><a href="#Build-RPM-x2F-DEB-packages" class="headerlink" title="Build RPM&#x2F;DEB packages"></a>Build RPM&#x2F;DEB packages</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir out</span><br><span class="line">cd out</span><br><span class="line">cmake -DCMAKE_BUILD_TYPE=Release ..</span><br><span class="line">make -j4</span><br><span class="line">make package</span><br></pre></td></tr></table></figure><h2 id="Setup-for-Arm-Cross-compile"><a href="#Setup-for-Arm-Cross-compile" class="headerlink" title="Setup for Arm Cross compile"></a>Setup for Arm Cross compile</h2><p>See also <a href="https://www.ccoderun.ca/programming/2015-12-20_CrossCompiling/index.html">https://www.ccoderun.ca/programming/2015-12-20_CrossCompiling&#x2F;index.html</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ssh dkms build-essential linux-headers-generic</span><br><span class="line">sudo apt-get install kdevelop cmake git subversion</span><br><span class="line">sudo apt-get install graphviz doxygen doxygen-gui</span><br><span class="line">sudo apt-get install manpages manpages-dev manpages-posix manpages-posix-dev</span><br><span class="line">sudo apt-get install libboost-all-dev libboost-dev libssl-dev</span><br><span class="line">sudo apt-get install rpm terminator fish</span><br><span class="line">sudo apt-get install g++-arm-linux-gnueabihf gcc-arm-linux-gnueabihf</span><br></pre></td></tr></table></figure><h3 id="Build-psnr-tool"><a href="#Build-psnr-tool" class="headerlink" title="Build psnr tool"></a>Build psnr tool</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd util</span><br><span class="line">arm-linux-gnueabihf-g++ psnr_main.cc psnr.cc ssim.cc -o psnr</span><br><span class="line">arm-linux-gnueabihf-objdump -d psnr</span><br></pre></td></tr></table></figure><h2 id="Running-Unittests"><a href="#Running-Unittests" class="headerlink" title="Running Unittests"></a>Running Unittests</h2><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out\Release\libyuv_unittest.exe --gtest_catch_exceptions=0 --gtest_filter=&quot;*&quot;</span><br></pre></td></tr></table></figure><h3 id="macOS-and-Linux-1"><a href="#macOS-and-Linux-1" class="headerlink" title="macOS and Linux"></a>macOS and Linux</h3><p>ou</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out/Release/libyuv_unittest --gtest_filter=&quot;*&quot;</span><br></pre></td></tr></table></figure><p>Replace –gtest_filter&#x3D;”*” with specific unittest to run. May include wildcards. out&#x2F;Release&#x2F;libyuv_unittest –gtest_filter&#x3D;*I420ToARGB_Opt</p><h2 id="CPU-Emulator-tools"><a href="#CPU-Emulator-tools" class="headerlink" title="CPU Emulator tools"></a>CPU Emulator tools</h2><h3 id="Intel-SDE-Software-Development-Emulator"><a href="#Intel-SDE-Software-Development-Emulator" class="headerlink" title="Intel SDE (Software Development Emulator)"></a>Intel SDE (Software Development Emulator)</h3><p>Pre-requisite: Install IntelSDE: <a href="http://software.intel.com/en-us/articles/intel-software-development-emulator">http://software.intel.com/en-us/articles/intel-software-development-emulator</a><br>Then run:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c:\intelsde\sde -hsw -- out\Release\libyuv_unittest.exe --gtest_filter=*</span><br><span class="line"></span><br><span class="line">~/intelsde/sde -skx -- out/Release/libyuv_unittest --gtest_filter=**I420ToARGB_Opt</span><br></pre></td></tr></table></figure><h3 id="Intel-Architecture-Code-Analyzer"><a href="#Intel-Architecture-Code-Analyzer" class="headerlink" title="Intel Architecture Code Analyzer"></a>Intel Architecture Code Analyzer</h3><p>Inset these 2 macros into assembly code to be analyzed:<br>IACA_ASM_START<br>IACA_ASM_END<br>Build the code as usual, then run iaca on the object file.<br>~&#x2F;iaca-lin64&#x2F;bin&#x2F;iaca.sh -reduceout -arch HSW out&#x2F;Release&#x2F;obj&#x2F;libyuv_internal&#x2F;compare_gcc.o</p><h2 id="Sanitizers"><a href="#Sanitizers" class="headerlink" title="Sanitizers"></a>Sanitizers</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gn gen out/Release &quot;--args=is_debug=false is_msan=true&quot;</span><br><span class="line">ninja -v -C out/Release</span><br></pre></td></tr></table></figure><h3 id="Running-Dr-Memory-memcheck-for-Windows"><a href="#Running-Dr-Memory-memcheck-for-Windows" class="headerlink" title="Running Dr Memory memcheck for Windows"></a>Running Dr Memory memcheck for Windows</h3><p>Pre-requisite: Install Dr Memory for Windows and add it to your path: <a href="http://www.drmemory.org/docs/page_install_windows.html">http://www.drmemory.org/docs/page_install_windows.html</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drmemory out\Debug\libyuv_unittest.exe --gtest_catch_exceptions=0 --gtest_filter=*</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;代码下载&quot;&gt;&lt;a href=&quot;#代码下载&quot; class=&quot;headerlink&quot; title=&quot;代码下载&quot;&gt;&lt;/a&gt;代码下载&lt;/h1&gt;&lt;p&gt;源码地址: &lt;a href=&quot;https://chromium.googlesource.com/libyuv/libyuv</summary>
      
    
    
    
    <category term="源码阅读" scheme="http://www.5isan.com/categories/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="libyuv" scheme="http://www.5isan.com/tags/libyuv/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.5isan.com/2023/03/18/hello-world/"/>
    <id>http://www.5isan.com/2023/03/18/hello-world/</id>
    <published>2023-03-18T11:51:32.948Z</published>
    <updated>2023-03-18T11:51:32.948Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
